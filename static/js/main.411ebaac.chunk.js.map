{"version":3,"sources":["components/OverlayName.js","components/Header.js","components/NoTask.js","components/Todo.js","components/TodosSection.js","App.js","index.js"],"names":["OverlayName","credentials","setCredentials","inputName","setInputName","className","valid","onChange","e","target","value","maxLength","type","onClick","preventDefault","name","window","alert","Header","inputText","setInputText","todos","setTodos","required","text","completed","id","Math","random","NoTask","Todo","todo","map","item","filter","el","TodosSection","length","App","useState","useEffect","getLocal","saveLocal","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","localCreds","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.411ebaac.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst OverlayName = ({ credentials, setCredentials, inputName, setInputName }) => {\r\n    const inputTextHandler = (e) =>{\r\n        setInputName(e.target.value);\r\n    }\r\n    const setNameHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(inputName!=='')\r\n            setCredentials({name: inputName , valid: 1})\r\n        else\r\n            window.alert(\"Please enter name to proceed.\")\r\n    }\r\n\r\n    return (\r\n        <div className={`getNameContainer ${(credentials.valid === 1) ? 'getNameContainerIfNameExists' : ''}`}>\r\n            <h1>Get Started.</h1>\r\n            <span>Enter your name.</span>\r\n            <form>\r\n                <input onChange={inputTextHandler} maxLength=\"12\" type=\"text\"/>\r\n                <button onClick={setNameHandler}>Go</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OverlayName\r\n","import React from 'react'\r\nconst Header = ({ inputText, setInputText, todos, setTodos, credentials }) => {\r\n    const inputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(inputText!==\"\"){\r\n            setTodos([\r\n                ...todos, \r\n                {text: inputText, completed: false, id: Math.random() * 1000 }\r\n            ]);\r\n        }\r\n        else{\r\n            window.alert(\"Cannnot add empty task.\")\r\n        }\r\n        setInputText(\"\");\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"titleheader\">\r\n                <h1>{credentials.name}'s Todo List</h1>\r\n            </div>\r\n            <div className=\"formheader\">\r\n                <form>\r\n                    <input value={inputText} onChange={inputTextHandler} maxLength=\"50\" type=\"text\" required />\r\n                    <button onClick={submitHandler}>\r\n                        <i className=\"far fa-paper-plane\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst NoTask = () => {\r\n    return (\r\n        <div className=\"notask\">\r\n            <p>There are no active/completed task. Please add a task to show here.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoTask\r\n","import React from 'react'\r\nconst Todo = ({ todo , todos , setTodos }) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    };\r\n    const completedHandler = () =>{\r\n        setTodos(todos.map((item) => {\r\n            if(item.id===todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todoCard\">\r\n            <div className={`todoTextClass ${todo.completed ? 'completedTask' : ''} `}>\r\n                <p>{todo.text}</p>\r\n            </div>\r\n            <div className=\"btnDiv\">\r\n                <button onClick={completedHandler} className={`${todo.completed ? 'btn1c' : 'btn1'} `}>\r\n                    {todo.completed ? \"Completed\" : \"Not completed\"}\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"btn2\">\r\n                    Remove\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport NoTask from './NoTask'\r\nimport Todo from \"./Todo\"\r\nconst TodosSection = ({ todos, setTodos }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"todoSection\">\r\n                {(todos.length!==0) \r\n                ?\r\n                    todos.map((todo) => (\r\n                        <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos}/>\r\n                    ))\r\n                :\r\n                <NoTask/>    \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosSection\r\n\r\n","import React, {useState, useEffect} from \"react\"\nimport OverlayName from \"./components/OverlayName\"\nimport Header from \"./components/Header\"\nimport TodosSection from \"./components/TodosSection\"\nexport default function App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [inputName, setInputName] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [credentials, setCredentials] = useState([]);\n  useEffect(() => {\n    getLocal();\n  }, []);\n\n  useEffect(() => {\n    saveLocal();\n  }, [todos, credentials]);\n\n  const saveLocal = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    localStorage.setItem(\"credentials\", JSON.stringify(credentials));\n  };\n\n  const getLocal = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else{\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos)\n    }\n    if(localStorage.getItem(\"credentials\") === null){\n      localStorage.setItem(\"credentials\", JSON.stringify([]));\n    }\n    else{\n      let localCreds = JSON.parse(localStorage.getItem(\"credentials\"));\n      setCredentials(localCreds);\n    }\n  }\n  return (\n    <div className=\"App\">\n        <OverlayName credentials={credentials} setCredentials={setCredentials} inputName={inputName} setInputName={setInputName} />\n        <Header inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos} credentials={credentials} />\n        <TodosSection todos={todos} setTodos={setTodos} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}